1.C++中的类也是一种构造类型，但是进行了一些扩展，类的成员不但可以是变量，还可以是函数；
  通过类定义出来的变量也有特定的称呼，叫做“对象”。
  在C语言中，gcc命令来编译和链接C程序
  在C++程序中，需要添加-lstdc++选项才能链接
  g++命令专门编译C++程序
  命名空间:namespace是C++的关键字，用来定义一个命名空间
  namespace name{
    //variables, functions, classes
  }
  name是命名空间的名字，它里面可以包含变量、函数、类、typedef、#define 等，最后由{ }包围。
  ::是一个新符号，称为域解析操作符，在C++中用来指明要使用的命名空间
  namespace Han{  //小韩的变量定义
    FILE fp = NULL
  }
  使用变量、函数时要指明它们所在的命名空间。以上面的 fp 变量为例，可以这样来使用：
  Han::fp=fopen("one.txt", "r"); 
  除了直接使用域解析操作符，还可以采用 using 声明
  using Li :: fp;
  fp = fopen("one.txt", "r");
  C++新开发的库:
  iostream.h：用于控制台输入输出头文件。
  fstream.h：用于文件操作的头文件。
  complex.h：用于复数计算的头文件
  旧的 C++ 头文件，如 iostream.h、fstream.h 等将会继续被支持，尽管它们不在官方标准中。这些头文
  件的内容不在命名空间 std 中
  新的 C++ 头文件，如 iostream、fstream 等包含的基本功能和对应的旧版头文件相似，但头文件的内容
  在命名空间 std 中。
  标准C头文件如 stdio.h、stdlib.h 等继续被支持。头文件的内容不在 std 中
  具有C库功能的新C++头文件具有如 cstdio、cstdlib 这样的名字。它们提供的内容和相应的旧的C头文件
  相同，只是内容在 std 中
  在 main() 函数中声明命名空间 std，它的作用范围就位于 main() 函数内部，如果在其他函数中又用到
  了 std，就需要重新声明,如果希望在所有函数中都使用命名空间 std，可以将它声明在全局范围中
  1.C++的输入和输出:cin和cout
  使用 cout 进行输出时需要紧跟<<运算符，使用 cin 进行输入时需要紧跟>>运算符，这两个运算符可以自
  行分析所处理的数据类型
  其中endl表示换行，与C语言里的\n作用相同。当然这段代码中也可以用\n来替代endl
  2.C++ 仍然使用 char、short、int、long、float、double 等基本数据类型；
  C++ 仍然使用 if...else、while、for、switch、break 等分支或循环结构；
  C++ 仍然使用 +、-、*、/、%、++、--、<<、>> 等运算符；
  C++ 仍然使用 typedef、#define、enum、struct 等；
  C++ 仍然使用C语言中经典的指针（Pointer），并且使用范围有增无减，甚至不可或缺
  更改:
  ANSI C 规定，所有局部变量都必须定义在函数开头，在定义好变量之前不能有其他的执行语句。C99 标准取消这这
  条限制，但是 VC/VS 对 C99 的支持很不积极，仍然要求变量定义在函数开头.
  C++ 取消了原来的限制，变量只要在使用之前定义好即可，不强制必须在函数开头定义所有变量。
  true 和 false 是 C++ 中的关键字
  C++ 新增了bool类型，它一般占用 1 个字节长度。bool 类型只有两个取值，true 和 false：true 
  表示“真”，false 表示“假”
  在C语言中，动态分配内存用 malloc() 函数，释放内存用 free() 函数,在C++中，这两个函数仍然可
  以使用，但是C++又新增了两个关键字，new 和 delete：new 用来动态分配内存，delete 用来释放内存
  int *p = new int;  //分配1个int型的内存空间
  delete p;
  如果希望分配一组连续的数据，可以使用 new[]
  int *p = new int[10];  //分配10个int型的内存空间
  delete[] p;
  用 new[] 分配的内存需要用 delete[] 释放，它们是一一对应的
  3.C++ 允许多个函数拥有相同的名字，只要它们的参数列表不同就可以，这就是函数的
  重载（Function Overloading）。借助重载，一个函数名可以有多种用途
  参数列表又叫参数签名，包括参数的类型、参数的个数和参数的顺序，只要有一个不同就叫做参数列表不同
2.C++的类和对象
  与结构体一样，类只是一种复杂数据类型的声明，不占用内存空间。而对象是类这种数据类型的一个变量，或者
  说是通过类这种数据类型创建出来的一份实实在在的数据，所以占用内存空间
  类是用户自定义的类型，如果程序中要用到类，必须提前说明，或者使用已存在的类
  class是 C++ 中新增的关键字，专门用来定义类。
  public也是 C++ 的新增关键字，它只能用在类的定义中，表示类的成员变量或成员函数具有“公开”的访问权限
  class Student{
  public:
    //成员变量
    char *name;
    int age;
    float score;
    //成员函数
    void say(){
        cout<<name<<"的年龄是"<<age<<"，成绩是"<<score<<endl;
    }
  };
  创建对象以后，可以使用点号.来访问成员变量和成员函数，这和通过结构体变量来访问它的成员类似
  C++通过 public、protected、private 三个关键字来控制成员变量和成员函数的访问权限，它们分别表示公
  有的、受保护的、私有的，被称为成员访问限定符。所谓访问权限，就是你能不能使用该类中的成员
  private 属性，在类的外部不能通过对象访问， public 属性，是公有的，可以通过对象访问